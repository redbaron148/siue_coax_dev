##############################################################################################
# Author: Christoph HÃ¼rzeler Date: 12.11.08
# Store project configuration module
#
# This file creates a config module storing project details of
# your project such as the configured install target directories.
# It will be copied to ${CMAKE_INSTALL_PREFIX}/lib/modules during installation of your project.
# Other projects will then be able to search for your Find${CMAKE_PROJECT_NAME}.cmake
# file and will immediatelly know how to link to your project.
#
# Defined variables are:
#
# ${CMAKE_PROJECT_NAME}_FOUND
# ${CMAKE_PROJECT_NAME}_DIR
# ${CMAKE_PROJECT_NAME}_INCLUDE_DIRS
# ${CMAKE_PROJECT_NAME}_LIBRARY_DIRS
# ${CMAKE_PROJECT_NAME}_LIBS
# 
#TODO: Maybe write a Find${CMAKE_PROJECT_NAME}.cmake instead and search at the HARDCODED
#      location (${CMAKE_INSTALL_PREFIX}) if the libraries are actually there to make
#      sure that not only the Find${CMAKE_PROJECT_NAME}.cmake module has been installed...
##############################################################################################

# Get the current date
#TODO: make this cross-platform compatible
EXECUTE_PROCESS( COMMAND date -u  OUTPUT_VARIABLE CURRENT_DATE )
STRING( REPLACE "\n" "" CURRENT_DATE ${CURRENT_DATE} )


# Store the installation target path of this project in a config module
FILE( WRITE  Find${CMAKE_PROJECT_NAME}.cmake "######################################################################\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "# THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY CMAKE                #\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "# AND SHOULD NOT BE CHANGED BY HAND!                                 #\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "# PROJECT: ${CMAKE_PROJECT_NAME} DATE: ${CURRENT_DATE}              #\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "######################################################################\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "SET( @CMAKE_PROJECT_NAME@_DIR          @CMAKE_INSTALL_PREFIX@/lib/modules )\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "SET( @CMAKE_PROJECT_NAME@_INCLUDE_DIRS @CMAKE_INSTALL_PREFIX@/include/@CMAKE_PROJECT_NAME@ )\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "SET( @CMAKE_PROJECT_NAME@_LIBRARY_DIRS @CMAKE_INSTALL_PREFIX@/lib/@CMAKE_PROJECT_NAME@ )\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "SET( @CMAKE_PROJECT_NAME@_LIBS         @CMAKE_PROJECT_NAME@ )\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "\n" )

# Make sure the library is actually installed
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "FIND_LIBRARY( @CMAKE_PROJECT_NAME@_LIB @CMAKE_PROJECT_NAME@ PATHS \${@CMAKE_PROJECT_NAME@_LIBRARY_DIRS} ) \n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "MESSAGE( STATUS \"Searching @CMAKE_PROJECT_NAME@...\" ) \n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "IF( \"\${@CMAKE_PROJECT_NAME@_LIB}\" STREQUAL \"@CMAKE_PROJECT_NAME@_LIB-NOTFOUND\" ) \n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "  IF( @CMAKE_PROJECT_NAME@_FIND_REQUIRED ) \n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "    MESSAGE( FATAL_ERROR \"Library -l@CMAKE_PROJECT_NAME@ not found!\" ) \n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "  ELSEIF( @CMAKE_PROJECT_NAME@_FIND_REQUIRED ) \n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "    MESSAGE( STATUS \"Warning: Library -l@CMAKE_PROJECT_NAME@ not found!\" ) \n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "  ENDIF( @CMAKE_PROJECT_NAME@_FIND_REQUIRED ) \n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "  SET( @CMAKE_PROJECT_NAME@_FOUND FALSE )\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "ELSEIF( NOT \"\${@CMAKE_PROJECT_NAME@_LIB}\" STREQUAL \"@CMAKE_PROJECT_NAME@_LIB-NOTFOUND\" ) \n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "  MESSAGE( STATUS \"Found @CMAKE_PROJECT_NAME@.\" )\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "  SET( @CMAKE_PROJECT_NAME@_FOUND TRUE )\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "\n" )
FILE( APPEND Find${CMAKE_PROJECT_NAME}.cmake "ENDIF( \"\${@CMAKE_PROJECT_NAME@_LIB}\" STREQUAL \"@CMAKE_PROJECT_NAME@_LIB-NOTFOUND\" ) \n" )

# Setup installation rule for the created file
INSTALL( FILES Find@CMAKE_PROJECT_NAME@.cmake DESTINATION @CMAKE_INSTALL_PREFIX@/lib/modules )


#TODO: do this with CONFIGURE_FILE( Find${CMAKE_PROJECT_NAME}.cmake.in Find${CMAKE_PROJECT_NAME}.cmake )instead