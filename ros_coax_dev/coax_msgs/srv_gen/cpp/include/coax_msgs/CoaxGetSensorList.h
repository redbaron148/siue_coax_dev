/* Auto-generated by genmsg_cpp for file /home/aaron/ros_pkgs/siue_coax_dev/ros_coax_dev/coax_msgs/srv/CoaxGetSensorList.srv */
#ifndef COAX_MSGS_SERVICE_COAXGETSENSORLIST_H
#define COAX_MSGS_SERVICE_COAXGETSENSORLIST_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace coax_msgs
{
template <class ContainerAllocator>
struct CoaxGetSensorListRequest_ : public ros::Message
{
  typedef CoaxGetSensorListRequest_<ContainerAllocator> Type;

  CoaxGetSensorListRequest_()
  {
  }

  CoaxGetSensorListRequest_(const ContainerAllocator& _alloc)
  {
  }


private:
  static const char* __s_getDataType_() { return "coax_msgs/CoaxGetSensorListRequest"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "d41d8cd98f00b204e9800998ecf8427e"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "8707033dcf26046312062358fc767479"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    return size;
  }

  typedef boost::shared_ptr< ::coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct CoaxGetSensorListRequest
typedef  ::coax_msgs::CoaxGetSensorListRequest_<std::allocator<void> > CoaxGetSensorListRequest;

typedef boost::shared_ptr< ::coax_msgs::CoaxGetSensorListRequest> CoaxGetSensorListRequestPtr;
typedef boost::shared_ptr< ::coax_msgs::CoaxGetSensorListRequest const> CoaxGetSensorListRequestConstPtr;


template <class ContainerAllocator>
struct CoaxGetSensorListResponse_ : public ros::Message
{
  typedef CoaxGetSensorListResponse_<ContainerAllocator> Type;

  CoaxGetSensorListResponse_()
  : list(0)
  {
  }

  CoaxGetSensorListResponse_(const ContainerAllocator& _alloc)
  : list(0)
  {
  }

  typedef uint32_t _list_type;
  uint32_t list;


private:
  static const char* __s_getDataType_() { return "coax_msgs/CoaxGetSensorListResponse"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "8707033dcf26046312062358fc767479"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "8707033dcf26046312062358fc767479"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "uint32 list\n\
\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, list);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, list);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(list);
    return size;
  }

  typedef boost::shared_ptr< ::coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct CoaxGetSensorListResponse
typedef  ::coax_msgs::CoaxGetSensorListResponse_<std::allocator<void> > CoaxGetSensorListResponse;

typedef boost::shared_ptr< ::coax_msgs::CoaxGetSensorListResponse> CoaxGetSensorListResponsePtr;
typedef boost::shared_ptr< ::coax_msgs::CoaxGetSensorListResponse const> CoaxGetSensorListResponseConstPtr;

struct CoaxGetSensorList
{

typedef CoaxGetSensorListRequest Request;
typedef CoaxGetSensorListResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct CoaxGetSensorList
} // namespace coax_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxGetSensorListRequest";
  }

  static const char* value(const  ::coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "8707033dcf26046312062358fc767479";
  }

  static const char* value(const  ::coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x8707033dcf260463ULL;
  static const uint64_t static_value2 = 0x12062358fc767479ULL;
};

template<class ContainerAllocator>
struct DataType< ::coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxGetSensorListResponse";
  }

  static const char* value(const  ::coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "uint32 list\n\
\n\
\n\
";
  }

  static const char* value(const  ::coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct CoaxGetSensorListRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.list);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct CoaxGetSensorListResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<coax_msgs::CoaxGetSensorList> {
  static const char* value() 
  {
    return "8707033dcf26046312062358fc767479";
  }

  static const char* value(const coax_msgs::CoaxGetSensorList&) { return value(); } 
};

template<>
struct DataType<coax_msgs::CoaxGetSensorList> {
  static const char* value() 
  {
    return "coax_msgs/CoaxGetSensorList";
  }

  static const char* value(const coax_msgs::CoaxGetSensorList&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "8707033dcf26046312062358fc767479";
  }

  static const char* value(const coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxGetSensorList";
  }

  static const char* value(const coax_msgs::CoaxGetSensorListRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "8707033dcf26046312062358fc767479";
  }

  static const char* value(const coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxGetSensorList";
  }

  static const char* value(const coax_msgs::CoaxGetSensorListResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // COAX_MSGS_SERVICE_COAXGETSENSORLIST_H

