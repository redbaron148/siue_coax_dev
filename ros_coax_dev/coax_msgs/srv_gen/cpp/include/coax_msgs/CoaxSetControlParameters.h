/* Auto-generated by genmsg_cpp for file /home/aaron/ros_pkgs/siue_coax_dev/ros_coax_dev/coax_msgs/srv/CoaxSetControlParameters.srv */
#ifndef COAX_MSGS_SERVICE_COAXSETCONTROLPARAMETERS_H
#define COAX_MSGS_SERVICE_COAXSETCONTROLPARAMETERS_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"

#include "coax_msgs/CoaxControlParameters.h"



namespace coax_msgs
{
template <class ContainerAllocator>
struct CoaxSetControlParametersRequest_ : public ros::Message
{
  typedef CoaxSetControlParametersRequest_<ContainerAllocator> Type;

  CoaxSetControlParametersRequest_()
  : params()
  {
  }

  CoaxSetControlParametersRequest_(const ContainerAllocator& _alloc)
  : params(_alloc)
  {
  }

  typedef  ::coax_msgs::CoaxControlParameters_<ContainerAllocator>  _params_type;
   ::coax_msgs::CoaxControlParameters_<ContainerAllocator>  params;


private:
  static const char* __s_getDataType_() { return "coax_msgs/CoaxSetControlParametersRequest"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "4def45fbd3753b180c424ffdcb35116e"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "4ced18bc984a7d80fa03ac2fadfc11ac"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "CoaxControlParameters params\n\
\n\
================================================================================\n\
MSG: coax_msgs/CoaxControlParameters\n\
# Base thrust around which the control operates */\n\
float32 baseThrust\n\
# Difference of operating point between up and down motors */\n\
float32 yawOffset\n\
# Altitude gain: Kp*/\n\
float32 altitudeKp\n\
# Altitude gain: Ki*/\n\
float32 altitudeKi\n\
# Altitude gain: Kd*/\n\
float32 altitudeKd\n\
\n\
# Yaw gain: Kp*/\n\
float32 yawKp\n\
# Yaw gain: Ki*/\n\
float32 yawKi\n\
# Yaw gain: Kd*/\n\
float32 yawKd\n\
\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, params);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, params);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(params);
    return size;
  }

  typedef boost::shared_ptr< ::coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct CoaxSetControlParametersRequest
typedef  ::coax_msgs::CoaxSetControlParametersRequest_<std::allocator<void> > CoaxSetControlParametersRequest;

typedef boost::shared_ptr< ::coax_msgs::CoaxSetControlParametersRequest> CoaxSetControlParametersRequestPtr;
typedef boost::shared_ptr< ::coax_msgs::CoaxSetControlParametersRequest const> CoaxSetControlParametersRequestConstPtr;


template <class ContainerAllocator>
struct CoaxSetControlParametersResponse_ : public ros::Message
{
  typedef CoaxSetControlParametersResponse_<ContainerAllocator> Type;

  CoaxSetControlParametersResponse_()
  : result(0)
  {
  }

  CoaxSetControlParametersResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int8_t _result_type;
  int8_t result;


private:
  static const char* __s_getDataType_() { return "coax_msgs/CoaxSetControlParametersResponse"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "4414c67819626a1b8e0f043a9a0d6c9a"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "4ced18bc984a7d80fa03ac2fadfc11ac"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int8 result\n\
\n\
\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, result);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, result);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(result);
    return size;
  }

  typedef boost::shared_ptr< ::coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct CoaxSetControlParametersResponse
typedef  ::coax_msgs::CoaxSetControlParametersResponse_<std::allocator<void> > CoaxSetControlParametersResponse;

typedef boost::shared_ptr< ::coax_msgs::CoaxSetControlParametersResponse> CoaxSetControlParametersResponsePtr;
typedef boost::shared_ptr< ::coax_msgs::CoaxSetControlParametersResponse const> CoaxSetControlParametersResponseConstPtr;

struct CoaxSetControlParameters
{

typedef CoaxSetControlParametersRequest Request;
typedef CoaxSetControlParametersResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct CoaxSetControlParameters
} // namespace coax_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4def45fbd3753b180c424ffdcb35116e";
  }

  static const char* value(const  ::coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x4def45fbd3753b18ULL;
  static const uint64_t static_value2 = 0x0c424ffdcb35116eULL;
};

template<class ContainerAllocator>
struct DataType< ::coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxSetControlParametersRequest";
  }

  static const char* value(const  ::coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "CoaxControlParameters params\n\
\n\
================================================================================\n\
MSG: coax_msgs/CoaxControlParameters\n\
# Base thrust around which the control operates */\n\
float32 baseThrust\n\
# Difference of operating point between up and down motors */\n\
float32 yawOffset\n\
# Altitude gain: Kp*/\n\
float32 altitudeKp\n\
# Altitude gain: Ki*/\n\
float32 altitudeKi\n\
# Altitude gain: Kd*/\n\
float32 altitudeKd\n\
\n\
# Yaw gain: Kp*/\n\
float32 yawKp\n\
# Yaw gain: Ki*/\n\
float32 yawKi\n\
# Yaw gain: Kd*/\n\
float32 yawKd\n\
\n\
\n\
";
  }

  static const char* value(const  ::coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4414c67819626a1b8e0f043a9a0d6c9a";
  }

  static const char* value(const  ::coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x4414c67819626a1bULL;
  static const uint64_t static_value2 = 0x8e0f043a9a0d6c9aULL;
};

template<class ContainerAllocator>
struct DataType< ::coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxSetControlParametersResponse";
  }

  static const char* value(const  ::coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 result\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.params);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct CoaxSetControlParametersRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct CoaxSetControlParametersResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<coax_msgs::CoaxSetControlParameters> {
  static const char* value() 
  {
    return "4ced18bc984a7d80fa03ac2fadfc11ac";
  }

  static const char* value(const coax_msgs::CoaxSetControlParameters&) { return value(); } 
};

template<>
struct DataType<coax_msgs::CoaxSetControlParameters> {
  static const char* value() 
  {
    return "coax_msgs/CoaxSetControlParameters";
  }

  static const char* value(const coax_msgs::CoaxSetControlParameters&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4ced18bc984a7d80fa03ac2fadfc11ac";
  }

  static const char* value(const coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxSetControlParameters";
  }

  static const char* value(const coax_msgs::CoaxSetControlParametersRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4ced18bc984a7d80fa03ac2fadfc11ac";
  }

  static const char* value(const coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxSetControlParameters";
  }

  static const char* value(const coax_msgs::CoaxSetControlParametersResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // COAX_MSGS_SERVICE_COAXSETCONTROLPARAMETERS_H

