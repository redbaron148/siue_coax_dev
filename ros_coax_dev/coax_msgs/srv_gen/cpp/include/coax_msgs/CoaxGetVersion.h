/* Auto-generated by genmsg_cpp for file /home/aaron/ros_pkgs/siue_coax_dev/ros_coax_dev/coax_msgs/srv/CoaxGetVersion.srv */
#ifndef COAX_MSGS_SERVICE_COAXGETVERSION_H
#define COAX_MSGS_SERVICE_COAXGETVERSION_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"



#include "coax_msgs/CoaxVersion.h"

namespace coax_msgs
{
template <class ContainerAllocator>
struct CoaxGetVersionRequest_ : public ros::Message
{
  typedef CoaxGetVersionRequest_<ContainerAllocator> Type;

  CoaxGetVersionRequest_()
  {
  }

  CoaxGetVersionRequest_(const ContainerAllocator& _alloc)
  {
  }


private:
  static const char* __s_getDataType_() { return "coax_msgs/CoaxGetVersionRequest"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "d41d8cd98f00b204e9800998ecf8427e"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "e6b62c09e386f0774fff1cbc20534440"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    return size;
  }

  typedef boost::shared_ptr< ::coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::coax_msgs::CoaxGetVersionRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct CoaxGetVersionRequest
typedef  ::coax_msgs::CoaxGetVersionRequest_<std::allocator<void> > CoaxGetVersionRequest;

typedef boost::shared_ptr< ::coax_msgs::CoaxGetVersionRequest> CoaxGetVersionRequestPtr;
typedef boost::shared_ptr< ::coax_msgs::CoaxGetVersionRequest const> CoaxGetVersionRequestConstPtr;


template <class ContainerAllocator>
struct CoaxGetVersionResponse_ : public ros::Message
{
  typedef CoaxGetVersionResponse_<ContainerAllocator> Type;

  CoaxGetVersionResponse_()
  : version()
  {
  }

  CoaxGetVersionResponse_(const ContainerAllocator& _alloc)
  : version(_alloc)
  {
  }

  typedef  ::coax_msgs::CoaxVersion_<ContainerAllocator>  _version_type;
   ::coax_msgs::CoaxVersion_<ContainerAllocator>  version;


private:
  static const char* __s_getDataType_() { return "coax_msgs/CoaxGetVersionResponse"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "e6b62c09e386f0774fff1cbc20534440"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "e6b62c09e386f0774fff1cbc20534440"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "CoaxVersion version\n\
\n\
\n\
\n\
================================================================================\n\
MSG: coax_msgs/CoaxVersion\n\
uint16 apiVersion\n\
uint16 controllerVersion\n\
string imuVersion\n\
string compileTime\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, version);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, version);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(version);
    return size;
  }

  typedef boost::shared_ptr< ::coax_msgs::CoaxGetVersionResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::coax_msgs::CoaxGetVersionResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct CoaxGetVersionResponse
typedef  ::coax_msgs::CoaxGetVersionResponse_<std::allocator<void> > CoaxGetVersionResponse;

typedef boost::shared_ptr< ::coax_msgs::CoaxGetVersionResponse> CoaxGetVersionResponsePtr;
typedef boost::shared_ptr< ::coax_msgs::CoaxGetVersionResponse const> CoaxGetVersionResponseConstPtr;

struct CoaxGetVersion
{

typedef CoaxGetVersionRequest Request;
typedef CoaxGetVersionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct CoaxGetVersion
} // namespace coax_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxGetVersionRequest";
  }

  static const char* value(const  ::coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::coax_msgs::CoaxGetVersionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e6b62c09e386f0774fff1cbc20534440";
  }

  static const char* value(const  ::coax_msgs::CoaxGetVersionResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe6b62c09e386f077ULL;
  static const uint64_t static_value2 = 0x4fff1cbc20534440ULL;
};

template<class ContainerAllocator>
struct DataType< ::coax_msgs::CoaxGetVersionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxGetVersionResponse";
  }

  static const char* value(const  ::coax_msgs::CoaxGetVersionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::coax_msgs::CoaxGetVersionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "CoaxVersion version\n\
\n\
\n\
\n\
================================================================================\n\
MSG: coax_msgs/CoaxVersion\n\
uint16 apiVersion\n\
uint16 controllerVersion\n\
string imuVersion\n\
string compileTime\n\
\n\
";
  }

  static const char* value(const  ::coax_msgs::CoaxGetVersionResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct CoaxGetVersionRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::coax_msgs::CoaxGetVersionResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.version);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct CoaxGetVersionResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<coax_msgs::CoaxGetVersion> {
  static const char* value() 
  {
    return "e6b62c09e386f0774fff1cbc20534440";
  }

  static const char* value(const coax_msgs::CoaxGetVersion&) { return value(); } 
};

template<>
struct DataType<coax_msgs::CoaxGetVersion> {
  static const char* value() 
  {
    return "coax_msgs/CoaxGetVersion";
  }

  static const char* value(const coax_msgs::CoaxGetVersion&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e6b62c09e386f0774fff1cbc20534440";
  }

  static const char* value(const coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxGetVersion";
  }

  static const char* value(const coax_msgs::CoaxGetVersionRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<coax_msgs::CoaxGetVersionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e6b62c09e386f0774fff1cbc20534440";
  }

  static const char* value(const coax_msgs::CoaxGetVersionResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<coax_msgs::CoaxGetVersionResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxGetVersion";
  }

  static const char* value(const coax_msgs::CoaxGetVersionResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // COAX_MSGS_SERVICE_COAXGETVERSION_H

