/* Auto-generated by genmsg_cpp for file /home/aaron/ros_pkgs/siue_coax_dev/ros_coax_dev/coax_msgs/srv/CoaxSetLight.srv */
#ifndef COAX_MSGS_SERVICE_COAXSETLIGHT_H
#define COAX_MSGS_SERVICE_COAXSETLIGHT_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace coax_msgs
{
template <class ContainerAllocator>
struct CoaxSetLightRequest_ : public ros::Message
{
  typedef CoaxSetLightRequest_<ContainerAllocator> Type;

  CoaxSetLightRequest_()
  : percent(0)
  {
  }

  CoaxSetLightRequest_(const ContainerAllocator& _alloc)
  : percent(0)
  {
  }

  typedef uint8_t _percent_type;
  uint8_t percent;


private:
  static const char* __s_getDataType_() { return "coax_msgs/CoaxSetLightRequest"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "df6637f9695a6f74d075e070d41895da"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "240f3dc9b05ebb42cdf3a9eb3ef29ad6"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "uint8 percent\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, percent);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, percent);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(percent);
    return size;
  }

  typedef boost::shared_ptr< ::coax_msgs::CoaxSetLightRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::coax_msgs::CoaxSetLightRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct CoaxSetLightRequest
typedef  ::coax_msgs::CoaxSetLightRequest_<std::allocator<void> > CoaxSetLightRequest;

typedef boost::shared_ptr< ::coax_msgs::CoaxSetLightRequest> CoaxSetLightRequestPtr;
typedef boost::shared_ptr< ::coax_msgs::CoaxSetLightRequest const> CoaxSetLightRequestConstPtr;


template <class ContainerAllocator>
struct CoaxSetLightResponse_ : public ros::Message
{
  typedef CoaxSetLightResponse_<ContainerAllocator> Type;

  CoaxSetLightResponse_()
  : result(0)
  {
  }

  CoaxSetLightResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int8_t _result_type;
  int8_t result;


private:
  static const char* __s_getDataType_() { return "coax_msgs/CoaxSetLightResponse"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "4414c67819626a1b8e0f043a9a0d6c9a"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "240f3dc9b05ebb42cdf3a9eb3ef29ad6"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int8 result\n\
\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, result);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, result);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(result);
    return size;
  }

  typedef boost::shared_ptr< ::coax_msgs::CoaxSetLightResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::coax_msgs::CoaxSetLightResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct CoaxSetLightResponse
typedef  ::coax_msgs::CoaxSetLightResponse_<std::allocator<void> > CoaxSetLightResponse;

typedef boost::shared_ptr< ::coax_msgs::CoaxSetLightResponse> CoaxSetLightResponsePtr;
typedef boost::shared_ptr< ::coax_msgs::CoaxSetLightResponse const> CoaxSetLightResponseConstPtr;

struct CoaxSetLight
{

typedef CoaxSetLightRequest Request;
typedef CoaxSetLightResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct CoaxSetLight
} // namespace coax_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::coax_msgs::CoaxSetLightRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "df6637f9695a6f74d075e070d41895da";
  }

  static const char* value(const  ::coax_msgs::CoaxSetLightRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xdf6637f9695a6f74ULL;
  static const uint64_t static_value2 = 0xd075e070d41895daULL;
};

template<class ContainerAllocator>
struct DataType< ::coax_msgs::CoaxSetLightRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxSetLightRequest";
  }

  static const char* value(const  ::coax_msgs::CoaxSetLightRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::coax_msgs::CoaxSetLightRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "uint8 percent\n\
\n\
";
  }

  static const char* value(const  ::coax_msgs::CoaxSetLightRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::coax_msgs::CoaxSetLightRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::coax_msgs::CoaxSetLightResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4414c67819626a1b8e0f043a9a0d6c9a";
  }

  static const char* value(const  ::coax_msgs::CoaxSetLightResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x4414c67819626a1bULL;
  static const uint64_t static_value2 = 0x8e0f043a9a0d6c9aULL;
};

template<class ContainerAllocator>
struct DataType< ::coax_msgs::CoaxSetLightResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxSetLightResponse";
  }

  static const char* value(const  ::coax_msgs::CoaxSetLightResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::coax_msgs::CoaxSetLightResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 result\n\
\n\
\n\
";
  }

  static const char* value(const  ::coax_msgs::CoaxSetLightResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::coax_msgs::CoaxSetLightResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::coax_msgs::CoaxSetLightRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.percent);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct CoaxSetLightRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::coax_msgs::CoaxSetLightResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct CoaxSetLightResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<coax_msgs::CoaxSetLight> {
  static const char* value() 
  {
    return "240f3dc9b05ebb42cdf3a9eb3ef29ad6";
  }

  static const char* value(const coax_msgs::CoaxSetLight&) { return value(); } 
};

template<>
struct DataType<coax_msgs::CoaxSetLight> {
  static const char* value() 
  {
    return "coax_msgs/CoaxSetLight";
  }

  static const char* value(const coax_msgs::CoaxSetLight&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<coax_msgs::CoaxSetLightRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "240f3dc9b05ebb42cdf3a9eb3ef29ad6";
  }

  static const char* value(const coax_msgs::CoaxSetLightRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<coax_msgs::CoaxSetLightRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxSetLight";
  }

  static const char* value(const coax_msgs::CoaxSetLightRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<coax_msgs::CoaxSetLightResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "240f3dc9b05ebb42cdf3a9eb3ef29ad6";
  }

  static const char* value(const coax_msgs::CoaxSetLightResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<coax_msgs::CoaxSetLightResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "coax_msgs/CoaxSetLight";
  }

  static const char* value(const coax_msgs::CoaxSetLightResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // COAX_MSGS_SERVICE_COAXSETLIGHT_H

